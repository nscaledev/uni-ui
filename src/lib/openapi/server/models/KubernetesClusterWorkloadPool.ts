/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes Service API
 * The Kubernetes Service API provides services that allows provisioning and life cycle management of Kubernetes clusters. The API is logically composed of authentication services, platform provider specific calls to get a set of resource types that can be then used by abstract Kubernetes Service resources to create and manage Kubernetes clusters. Requests must specify the HTML content type header.
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { KubernetesClusterAutoscaling } from './KubernetesClusterAutoscaling';
import {
    KubernetesClusterAutoscalingFromJSON,
    KubernetesClusterAutoscalingFromJSONTyped,
    KubernetesClusterAutoscalingToJSON,
} from './KubernetesClusterAutoscaling';
import type { MachinePool } from './MachinePool';
import {
    MachinePoolFromJSON,
    MachinePoolFromJSONTyped,
    MachinePoolToJSON,
} from './MachinePool';

/**
 * A Kuberntes cluster workload pool.
 * @export
 * @interface KubernetesClusterWorkloadPool
 */
export interface KubernetesClusterWorkloadPool {
    /**
     * Workload pool name.
     * @type {string}
     * @memberof KubernetesClusterWorkloadPool
     */
    name: string;
    /**
     * 
     * @type {MachinePool}
     * @memberof KubernetesClusterWorkloadPool
     */
    machine: MachinePool;
    /**
     * Workload pool key value labels to apply on node creation.
     * @type {{ [key: string]: string; }}
     * @memberof KubernetesClusterWorkloadPool
     */
    labels?: { [key: string]: string; };
    /**
     * 
     * @type {KubernetesClusterAutoscaling}
     * @memberof KubernetesClusterWorkloadPool
     */
    autoscaling?: KubernetesClusterAutoscaling;
}

/**
 * Check if a given object implements the KubernetesClusterWorkloadPool interface.
 */
export function instanceOfKubernetesClusterWorkloadPool(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "machine" in value;

    return isInstance;
}

export function KubernetesClusterWorkloadPoolFromJSON(json: any): KubernetesClusterWorkloadPool {
    return KubernetesClusterWorkloadPoolFromJSONTyped(json, false);
}

export function KubernetesClusterWorkloadPoolFromJSONTyped(json: any, ignoreDiscriminator: boolean): KubernetesClusterWorkloadPool {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'machine': MachinePoolFromJSON(json['machine']),
        'labels': !exists(json, 'labels') ? undefined : json['labels'],
        'autoscaling': !exists(json, 'autoscaling') ? undefined : KubernetesClusterAutoscalingFromJSON(json['autoscaling']),
    };
}

export function KubernetesClusterWorkloadPoolToJSON(value?: KubernetesClusterWorkloadPool | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'machine': MachinePoolToJSON(value.machine),
        'labels': value.labels,
        'autoscaling': KubernetesClusterAutoscalingToJSON(value.autoscaling),
    };
}

