/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes Region Service API
 * Cloud region discovery and routing service.
 *
 * The version of the OpenAPI document: 0.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ServerImage } from './ServerImage';
import {
    ServerImageFromJSON,
    ServerImageFromJSONTyped,
    ServerImageToJSON,
} from './ServerImage';
import type { ServerNetwork } from './ServerNetwork';
import {
    ServerNetworkFromJSON,
    ServerNetworkFromJSONTyped,
    ServerNetworkToJSON,
} from './ServerNetwork';
import type { ServerPublicIPAllocation } from './ServerPublicIPAllocation';
import {
    ServerPublicIPAllocationFromJSON,
    ServerPublicIPAllocationFromJSONTyped,
    ServerPublicIPAllocationToJSON,
} from './ServerPublicIPAllocation';
import type { ServerSecurityGroup } from './ServerSecurityGroup';
import {
    ServerSecurityGroupFromJSON,
    ServerSecurityGroupFromJSONTyped,
    ServerSecurityGroupToJSON,
} from './ServerSecurityGroup';

/**
 * A server's specification.
 * @export
 * @interface ServerWriteSpec
 */
export interface ServerWriteSpec {
    /**
     * The flavor of the server.
     * @type {string}
     * @memberof ServerWriteSpec
     */
    flavorId: string;
    /**
     * 
     * @type {ServerImage}
     * @memberof ServerWriteSpec
     */
    image: ServerImage;
    /**
     * A list of security groups.
     * @type {Array<ServerSecurityGroup>}
     * @memberof ServerWriteSpec
     */
    securityGroups?: Array<ServerSecurityGroup>;
    /**
     * 
     * @type {ServerPublicIPAllocation}
     * @memberof ServerWriteSpec
     */
    publicIPAllocation?: ServerPublicIPAllocation;
    /**
     * A list of networks.
     * @type {Array<ServerNetwork>}
     * @memberof ServerWriteSpec
     */
    networks: Array<ServerNetwork>;
    /**
     * UserData contains base64-encoded configuration information or scripts to use upon launch.
     * @type {string}
     * @memberof ServerWriteSpec
     */
    userData?: string;
}

/**
 * Check if a given object implements the ServerWriteSpec interface.
 */
export function instanceOfServerWriteSpec(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "flavorId" in value;
    isInstance = isInstance && "image" in value;
    isInstance = isInstance && "networks" in value;

    return isInstance;
}

export function ServerWriteSpecFromJSON(json: any): ServerWriteSpec {
    return ServerWriteSpecFromJSONTyped(json, false);
}

export function ServerWriteSpecFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServerWriteSpec {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'flavorId': json['flavorId'],
        'image': ServerImageFromJSON(json['image']),
        'securityGroups': !exists(json, 'securityGroups') ? undefined : ((json['securityGroups'] as Array<any>).map(ServerSecurityGroupFromJSON)),
        'publicIPAllocation': !exists(json, 'publicIPAllocation') ? undefined : ServerPublicIPAllocationFromJSON(json['publicIPAllocation']),
        'networks': ((json['networks'] as Array<any>).map(ServerNetworkFromJSON)),
        'userData': !exists(json, 'userData') ? undefined : json['userData'],
    };
}

export function ServerWriteSpecToJSON(value?: ServerWriteSpec | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'flavorId': value.flavorId,
        'image': ServerImageToJSON(value.image),
        'securityGroups': value.securityGroups === undefined ? undefined : ((value.securityGroups as Array<any>).map(ServerSecurityGroupToJSON)),
        'publicIPAllocation': ServerPublicIPAllocationToJSON(value.publicIPAllocation),
        'networks': ((value.networks as Array<any>).map(ServerNetworkToJSON)),
        'userData': value.userData,
    };
}

