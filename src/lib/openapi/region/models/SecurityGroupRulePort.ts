/* tslint:disable */
/* eslint-disable */
/**
 * Region Service API
 * Cloud region discovery and routing service.  This is service not intended for direct access by end users.  Region related functionality is typically exposed by higher level services e.g. Compute and Kubernetes, that provide subsets of resources that are compatible with that service.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SecurityGroupRulePortRange } from './SecurityGroupRulePortRange';
import {
    SecurityGroupRulePortRangeFromJSON,
    SecurityGroupRulePortRangeFromJSONTyped,
    SecurityGroupRulePortRangeToJSON,
} from './SecurityGroupRulePortRange';

/**
 * The port definition to allow traffic.
 * @export
 * @interface SecurityGroupRulePort
 */
export interface SecurityGroupRulePort {
    /**
     * The port to allow.
     * @type {number}
     * @memberof SecurityGroupRulePort
     */
    number?: number;
    /**
     * 
     * @type {SecurityGroupRulePortRange}
     * @memberof SecurityGroupRulePort
     */
    range?: SecurityGroupRulePortRange;
}

/**
 * Check if a given object implements the SecurityGroupRulePort interface.
 */
export function instanceOfSecurityGroupRulePort(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SecurityGroupRulePortFromJSON(json: any): SecurityGroupRulePort {
    return SecurityGroupRulePortFromJSONTyped(json, false);
}

export function SecurityGroupRulePortFromJSONTyped(json: any, ignoreDiscriminator: boolean): SecurityGroupRulePort {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'number': !exists(json, 'number') ? undefined : json['number'],
        'range': !exists(json, 'range') ? undefined : SecurityGroupRulePortRangeFromJSON(json['range']),
    };
}

export function SecurityGroupRulePortToJSON(value?: SecurityGroupRulePort | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'number': value.number,
        'range': SecurityGroupRulePortRangeToJSON(value.range),
    };
}

