/* tslint:disable */
/* eslint-disable */
/**
 * Region Service API
 * Cloud region discovery and routing service.  This is service not intended for direct access by end users.  Region related functionality is typically exposed by higher level services e.g. Compute and Kubernetes, that provide subsets of resources that are compatible with that service.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Region specific information when the type is "kubernetes".
 * @export
 * @interface RegionDetailKubernetes
 */
export interface RegionDetailKubernetes {
    /**
     * The region's base64 encoded Kubernetes configuration file.
     * @type {string}
     * @memberof RegionDetailKubernetes
     */
    kubeconfig: string;
    /**
     * The region's requested domain name for consuming services.
     * @type {string}
     * @memberof RegionDetailKubernetes
     */
    domainName?: string;
}

/**
 * Check if a given object implements the RegionDetailKubernetes interface.
 */
export function instanceOfRegionDetailKubernetes(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "kubeconfig" in value;

    return isInstance;
}

export function RegionDetailKubernetesFromJSON(json: any): RegionDetailKubernetes {
    return RegionDetailKubernetesFromJSONTyped(json, false);
}

export function RegionDetailKubernetesFromJSONTyped(json: any, ignoreDiscriminator: boolean): RegionDetailKubernetes {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'kubeconfig': json['kubeconfig'],
        'domainName': !exists(json, 'domainName') ? undefined : json['domainName'],
    };
}

export function RegionDetailKubernetesToJSON(value?: RegionDetailKubernetes | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'kubeconfig': value.kubeconfig,
        'domainName': value.domainName,
    };
}

