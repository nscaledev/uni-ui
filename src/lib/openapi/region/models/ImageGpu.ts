/* tslint:disable */
/* eslint-disable */
/**
 * Region Service API
 * Cloud region discovery and routing service.  This is service not intended for direct access by end users.  Region related functionality is typically exposed by higher level services e.g. Compute and Kubernetes, that provide subsets of resources that are compatible with that service.
 *
 * The version of the OpenAPI document: 1.9.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GpuVendor } from './GpuVendor';
import {
    GpuVendorFromJSON,
    GpuVendorFromJSONTyped,
    GpuVendorToJSON,
} from './GpuVendor';

/**
 * The GPU driver if installed.
 * @export
 * @interface ImageGpu
 */
export interface ImageGpu {
    /**
     * 
     * @type {GpuVendor}
     * @memberof ImageGpu
     */
    vendor: GpuVendor;
    /**
     * The GPU driver version, this is vendor specific.
     * @type {string}
     * @memberof ImageGpu
     */
    driver: string;
    /**
     * A list of GPU model numbers.
     * @type {Array<string>}
     * @memberof ImageGpu
     */
    models?: Array<string>;
}

/**
 * Check if a given object implements the ImageGpu interface.
 */
export function instanceOfImageGpu(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "vendor" in value;
    isInstance = isInstance && "driver" in value;

    return isInstance;
}

export function ImageGpuFromJSON(json: any): ImageGpu {
    return ImageGpuFromJSONTyped(json, false);
}

export function ImageGpuFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImageGpu {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'vendor': GpuVendorFromJSON(json['vendor']),
        'driver': json['driver'],
        'models': !exists(json, 'models') ? undefined : json['models'],
    };
}

export function ImageGpuToJSON(value?: ImageGpu | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'vendor': GpuVendorToJSON(value.vendor),
        'driver': value.driver,
        'models': value.models,
    };
}

