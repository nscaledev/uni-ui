/* tslint:disable */
/* eslint-disable */
/**
 * Region Service API
 * Cloud region discovery and routing service.  This is service not intended for direct access by end users.  Region related functionality is typically exposed by higher level services e.g. Compute and Kubernetes, that provide subsets of resources that are compatible with that service.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProjectScopedResourceReadMetadata } from './ProjectScopedResourceReadMetadata';
import {
    ProjectScopedResourceReadMetadataFromJSON,
    ProjectScopedResourceReadMetadataFromJSONTyped,
    ProjectScopedResourceReadMetadataToJSON,
} from './ProjectScopedResourceReadMetadata';
import type { SecurityGroupRuleSpec } from './SecurityGroupRuleSpec';
import {
    SecurityGroupRuleSpecFromJSON,
    SecurityGroupRuleSpecFromJSONTyped,
    SecurityGroupRuleSpecToJSON,
} from './SecurityGroupRuleSpec';

/**
 * A security group rule.
 * @export
 * @interface SecurityGroupRuleRead
 */
export interface SecurityGroupRuleRead {
    /**
     * 
     * @type {ProjectScopedResourceReadMetadata}
     * @memberof SecurityGroupRuleRead
     */
    metadata: ProjectScopedResourceReadMetadata;
    /**
     * 
     * @type {SecurityGroupRuleSpec}
     * @memberof SecurityGroupRuleRead
     */
    spec: SecurityGroupRuleSpec;
}

/**
 * Check if a given object implements the SecurityGroupRuleRead interface.
 */
export function instanceOfSecurityGroupRuleRead(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "metadata" in value;
    isInstance = isInstance && "spec" in value;

    return isInstance;
}

export function SecurityGroupRuleReadFromJSON(json: any): SecurityGroupRuleRead {
    return SecurityGroupRuleReadFromJSONTyped(json, false);
}

export function SecurityGroupRuleReadFromJSONTyped(json: any, ignoreDiscriminator: boolean): SecurityGroupRuleRead {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'metadata': ProjectScopedResourceReadMetadataFromJSON(json['metadata']),
        'spec': SecurityGroupRuleSpecFromJSON(json['spec']),
    };
}

export function SecurityGroupRuleReadToJSON(value?: SecurityGroupRuleRead | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'metadata': ProjectScopedResourceReadMetadataToJSON(value.metadata),
        'spec': SecurityGroupRuleSpecToJSON(value.spec),
    };
}

