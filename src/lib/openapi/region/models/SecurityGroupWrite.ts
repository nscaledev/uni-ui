/* tslint:disable */
/* eslint-disable */
/**
 * Region Service API
 * Cloud region discovery and routing service.  This is service not intended for direct access by end users.  Region related functionality is typically exposed by higher level services e.g. Compute and Kubernetes, that provide subsets of resources that are compatible with that service.
 *
 * The version of the OpenAPI document: 1.8.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ResourceWriteMetadata } from './ResourceWriteMetadata';
import {
    ResourceWriteMetadataFromJSON,
    ResourceWriteMetadataFromJSONTyped,
    ResourceWriteMetadataToJSON,
} from './ResourceWriteMetadata';
import type { SecurityGroupSpec } from './SecurityGroupSpec';
import {
    SecurityGroupSpecFromJSON,
    SecurityGroupSpecFromJSONTyped,
    SecurityGroupSpecToJSON,
} from './SecurityGroupSpec';

/**
 * A security group request.
 * @export
 * @interface SecurityGroupWrite
 */
export interface SecurityGroupWrite {
    /**
     * 
     * @type {ResourceWriteMetadata}
     * @memberof SecurityGroupWrite
     */
    metadata: ResourceWriteMetadata;
    /**
     * 
     * @type {SecurityGroupSpec}
     * @memberof SecurityGroupWrite
     */
    spec: SecurityGroupSpec;
}

/**
 * Check if a given object implements the SecurityGroupWrite interface.
 */
export function instanceOfSecurityGroupWrite(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "metadata" in value;
    isInstance = isInstance && "spec" in value;

    return isInstance;
}

export function SecurityGroupWriteFromJSON(json: any): SecurityGroupWrite {
    return SecurityGroupWriteFromJSONTyped(json, false);
}

export function SecurityGroupWriteFromJSONTyped(json: any, ignoreDiscriminator: boolean): SecurityGroupWrite {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'metadata': ResourceWriteMetadataFromJSON(json['metadata']),
        'spec': SecurityGroupSpecFromJSON(json['spec']),
    };
}

export function SecurityGroupWriteToJSON(value?: SecurityGroupWrite | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'metadata': ResourceWriteMetadataToJSON(value.metadata),
        'spec': SecurityGroupSpecToJSON(value.spec),
    };
}

