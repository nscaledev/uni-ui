/* tslint:disable */
/* eslint-disable */
/**
 * Region Service API
 * Cloud region discovery and routing service.  This is service not intended for direct access by end users.  Region related functionality is typically exposed by higher level services e.g. Compute and Kubernetes, that provide subsets of resources that are compatible with that service.
 *
 * The version of the OpenAPI document: 1.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RegionDetailSpec } from './RegionDetailSpec';
import {
    RegionDetailSpecFromJSON,
    RegionDetailSpecFromJSONTyped,
    RegionDetailSpecToJSON,
} from './RegionDetailSpec';
import type { ResourceReadMetadata } from './ResourceReadMetadata';
import {
    ResourceReadMetadataFromJSON,
    ResourceReadMetadataFromJSONTyped,
    ResourceReadMetadataToJSON,
} from './ResourceReadMetadata';

/**
 * A region.
 * @export
 * @interface RegionDetailRead
 */
export interface RegionDetailRead {
    /**
     * 
     * @type {ResourceReadMetadata}
     * @memberof RegionDetailRead
     */
    metadata: ResourceReadMetadata;
    /**
     * 
     * @type {RegionDetailSpec}
     * @memberof RegionDetailRead
     */
    spec: RegionDetailSpec;
}

/**
 * Check if a given object implements the RegionDetailRead interface.
 */
export function instanceOfRegionDetailRead(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "metadata" in value;
    isInstance = isInstance && "spec" in value;

    return isInstance;
}

export function RegionDetailReadFromJSON(json: any): RegionDetailRead {
    return RegionDetailReadFromJSONTyped(json, false);
}

export function RegionDetailReadFromJSONTyped(json: any, ignoreDiscriminator: boolean): RegionDetailRead {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'metadata': ResourceReadMetadataFromJSON(json['metadata']),
        'spec': RegionDetailSpecFromJSON(json['spec']),
    };
}

export function RegionDetailReadToJSON(value?: RegionDetailRead | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'metadata': ResourceReadMetadataToJSON(value.metadata),
        'spec': RegionDetailSpecToJSON(value.spec),
    };
}

