/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes Region Service API
 * Cloud region discovery and routing service.
 *
 * The version of the OpenAPI document: 0.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * An openstack network.
 * @export
 * @interface NetworkSpecOpenstack
 */
export interface NetworkSpecOpenstack {
    /**
     * The allocated VLAN ID.
     * @type {number}
     * @memberof NetworkSpecOpenstack
     */
    vlanId?: number;
    /**
     * The openstack network ID.
     * @type {string}
     * @memberof NetworkSpecOpenstack
     */
    networkId?: string;
    /**
     * The openstack subnet ID.
     * @type {string}
     * @memberof NetworkSpecOpenstack
     */
    subnetId?: string;
    /**
     * The openstack router ID.
     * @type {string}
     * @memberof NetworkSpecOpenstack
     */
    routerId?: string;
}

/**
 * Check if a given object implements the NetworkSpecOpenstack interface.
 */
export function instanceOfNetworkSpecOpenstack(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function NetworkSpecOpenstackFromJSON(json: any): NetworkSpecOpenstack {
    return NetworkSpecOpenstackFromJSONTyped(json, false);
}

export function NetworkSpecOpenstackFromJSONTyped(json: any, ignoreDiscriminator: boolean): NetworkSpecOpenstack {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'vlanId': !exists(json, 'vlanId') ? undefined : json['vlanId'],
        'networkId': !exists(json, 'networkId') ? undefined : json['networkId'],
        'subnetId': !exists(json, 'subnetId') ? undefined : json['subnetId'],
        'routerId': !exists(json, 'routerId') ? undefined : json['routerId'],
    };
}

export function NetworkSpecOpenstackToJSON(value?: NetworkSpecOpenstack | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'vlanId': value.vlanId,
        'networkId': value.networkId,
        'subnetId': value.subnetId,
        'routerId': value.routerId,
    };
}

