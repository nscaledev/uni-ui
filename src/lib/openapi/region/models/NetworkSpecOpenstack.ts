/* tslint:disable */
/* eslint-disable */
/**
 * Region Service API
 * Cloud region discovery and routing service.  This is service not intended for direct access by end users.  Region related functionality is typically exposed by higher level services e.g. Compute and Kubernetes, that provide subsets of resources that are compatible with that service.
 *
 * The version of the OpenAPI document: 1.5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * An openstack network.
 * @export
 * @interface NetworkSpecOpenstack
 */
export interface NetworkSpecOpenstack {
    /**
     * The allocated VLAN ID.
     * @type {number}
     * @memberof NetworkSpecOpenstack
     */
    vlanId?: number;
    /**
     * The openstack network ID.
     * @type {string}
     * @memberof NetworkSpecOpenstack
     */
    networkId?: string;
    /**
     * The openstack subnet ID.
     * @type {string}
     * @memberof NetworkSpecOpenstack
     */
    subnetId?: string;
    /**
     * The openstack router ID.
     * @type {string}
     * @memberof NetworkSpecOpenstack
     */
    routerId?: string;
}

/**
 * Check if a given object implements the NetworkSpecOpenstack interface.
 */
export function instanceOfNetworkSpecOpenstack(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function NetworkSpecOpenstackFromJSON(json: any): NetworkSpecOpenstack {
    return NetworkSpecOpenstackFromJSONTyped(json, false);
}

export function NetworkSpecOpenstackFromJSONTyped(json: any, ignoreDiscriminator: boolean): NetworkSpecOpenstack {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'vlanId': !exists(json, 'vlanId') ? undefined : json['vlanId'],
        'networkId': !exists(json, 'networkId') ? undefined : json['networkId'],
        'subnetId': !exists(json, 'subnetId') ? undefined : json['subnetId'],
        'routerId': !exists(json, 'routerId') ? undefined : json['routerId'],
    };
}

export function NetworkSpecOpenstackToJSON(value?: NetworkSpecOpenstack | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'vlanId': value.vlanId,
        'networkId': value.networkId,
        'subnetId': value.subnetId,
        'routerId': value.routerId,
    };
}

