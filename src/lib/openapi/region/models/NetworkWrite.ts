/* tslint:disable */
/* eslint-disable */
/**
 * Region Service API
 * Cloud region discovery and routing service.  This is service not intended for direct access by end users.  Region related functionality is typically exposed by higher level services e.g. Compute and Kubernetes, that provide subsets of resources that are compatible with that service.
 *
 * The version of the OpenAPI document: 1.5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { NetworkWriteSpec } from './NetworkWriteSpec';
import {
    NetworkWriteSpecFromJSON,
    NetworkWriteSpecFromJSONTyped,
    NetworkWriteSpecToJSON,
} from './NetworkWriteSpec';
import type { ResourceWriteMetadata } from './ResourceWriteMetadata';
import {
    ResourceWriteMetadataFromJSON,
    ResourceWriteMetadataFromJSONTyped,
    ResourceWriteMetadataToJSON,
} from './ResourceWriteMetadata';

/**
 * A network request.
 * @export
 * @interface NetworkWrite
 */
export interface NetworkWrite {
    /**
     * 
     * @type {ResourceWriteMetadata}
     * @memberof NetworkWrite
     */
    metadata: ResourceWriteMetadata;
    /**
     * 
     * @type {NetworkWriteSpec}
     * @memberof NetworkWrite
     */
    spec?: NetworkWriteSpec;
}

/**
 * Check if a given object implements the NetworkWrite interface.
 */
export function instanceOfNetworkWrite(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "metadata" in value;

    return isInstance;
}

export function NetworkWriteFromJSON(json: any): NetworkWrite {
    return NetworkWriteFromJSONTyped(json, false);
}

export function NetworkWriteFromJSONTyped(json: any, ignoreDiscriminator: boolean): NetworkWrite {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'metadata': ResourceWriteMetadataFromJSON(json['metadata']),
        'spec': !exists(json, 'spec') ? undefined : NetworkWriteSpecFromJSON(json['spec']),
    };
}

export function NetworkWriteToJSON(value?: NetworkWrite | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'metadata': ResourceWriteMetadataToJSON(value.metadata),
        'spec': NetworkWriteSpecToJSON(value.spec),
    };
}

