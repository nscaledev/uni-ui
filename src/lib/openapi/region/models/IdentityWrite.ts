/* tslint:disable */
/* eslint-disable */
/**
 * Region Service API
 * Cloud region discovery and routing service.  This is service not intended for direct access by end users.  Region related functionality is typically exposed by higher level services e.g. Compute and Kubernetes, that provide subsets of resources that are compatible with that service.
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { IdentityWriteSpec } from './IdentityWriteSpec';
import {
    IdentityWriteSpecFromJSON,
    IdentityWriteSpecFromJSONTyped,
    IdentityWriteSpecToJSON,
} from './IdentityWriteSpec';
import type { ResourceWriteMetadata } from './ResourceWriteMetadata';
import {
    ResourceWriteMetadataFromJSON,
    ResourceWriteMetadataFromJSONTyped,
    ResourceWriteMetadataToJSON,
} from './ResourceWriteMetadata';

/**
 * An identity request.
 * @export
 * @interface IdentityWrite
 */
export interface IdentityWrite {
    /**
     * 
     * @type {ResourceWriteMetadata}
     * @memberof IdentityWrite
     */
    metadata: ResourceWriteMetadata;
    /**
     * 
     * @type {IdentityWriteSpec}
     * @memberof IdentityWrite
     */
    spec: IdentityWriteSpec;
}

/**
 * Check if a given object implements the IdentityWrite interface.
 */
export function instanceOfIdentityWrite(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "metadata" in value;
    isInstance = isInstance && "spec" in value;

    return isInstance;
}

export function IdentityWriteFromJSON(json: any): IdentityWrite {
    return IdentityWriteFromJSONTyped(json, false);
}

export function IdentityWriteFromJSONTyped(json: any, ignoreDiscriminator: boolean): IdentityWrite {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'metadata': ResourceWriteMetadataFromJSON(json['metadata']),
        'spec': IdentityWriteSpecFromJSON(json['spec']),
    };
}

export function IdentityWriteToJSON(value?: IdentityWrite | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'metadata': ResourceWriteMetadataToJSON(value.metadata),
        'spec': IdentityWriteSpecToJSON(value.spec),
    };
}

