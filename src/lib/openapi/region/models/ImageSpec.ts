/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes Region Service API
 * Cloud region discovery and routing service.
 *
 * The version of the OpenAPI document: 0.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GpuDriver } from './GpuDriver';
import {
    GpuDriverFromJSON,
    GpuDriverFromJSONTyped,
    GpuDriverToJSON,
} from './GpuDriver';
import type { SoftwareVersions } from './SoftwareVersions';
import {
    SoftwareVersionsFromJSON,
    SoftwareVersionsFromJSONTyped,
    SoftwareVersionsToJSON,
} from './SoftwareVersions';

/**
 * An image.
 * @export
 * @interface ImageSpec
 */
export interface ImageSpec {
    /**
     * 
     * @type {SoftwareVersions}
     * @memberof ImageSpec
     */
    softwareVersions?: SoftwareVersions;
    /**
     * 
     * @type {GpuDriver}
     * @memberof ImageSpec
     */
    gpuDriver?: GpuDriver;
}

/**
 * Check if a given object implements the ImageSpec interface.
 */
export function instanceOfImageSpec(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ImageSpecFromJSON(json: any): ImageSpec {
    return ImageSpecFromJSONTyped(json, false);
}

export function ImageSpecFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImageSpec {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'softwareVersions': !exists(json, 'softwareVersions') ? undefined : SoftwareVersionsFromJSON(json['softwareVersions']),
        'gpuDriver': !exists(json, 'gpuDriver') ? undefined : GpuDriverFromJSON(json['gpuDriver']),
    };
}

export function ImageSpecToJSON(value?: ImageSpec | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'softwareVersions': SoftwareVersionsToJSON(value.softwareVersions),
        'gpuDriver': GpuDriverToJSON(value.gpuDriver),
    };
}

