/* tslint:disable */
/* eslint-disable */
/**
 * Region Service API
 * Cloud region discovery and routing service.  This is service not intended for direct access by end users.  Region related functionality is typically exposed by higher level services e.g. Compute and Kubernetes, that provide subsets of resources that are compatible with that service.
 *
 * The version of the OpenAPI document: 1.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FlavorSpec } from './FlavorSpec';
import {
    FlavorSpecFromJSON,
    FlavorSpecFromJSONTyped,
    FlavorSpecToJSON,
} from './FlavorSpec';
import type { StaticResourceMetadata } from './StaticResourceMetadata';
import {
    StaticResourceMetadataFromJSON,
    StaticResourceMetadataFromJSONTyped,
    StaticResourceMetadataToJSON,
} from './StaticResourceMetadata';

/**
 * A flavor.
 * @export
 * @interface Flavor
 */
export interface Flavor {
    /**
     * 
     * @type {StaticResourceMetadata}
     * @memberof Flavor
     */
    metadata: StaticResourceMetadata;
    /**
     * 
     * @type {FlavorSpec}
     * @memberof Flavor
     */
    spec: FlavorSpec;
}

/**
 * Check if a given object implements the Flavor interface.
 */
export function instanceOfFlavor(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "metadata" in value;
    isInstance = isInstance && "spec" in value;

    return isInstance;
}

export function FlavorFromJSON(json: any): Flavor {
    return FlavorFromJSONTyped(json, false);
}

export function FlavorFromJSONTyped(json: any, ignoreDiscriminator: boolean): Flavor {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'metadata': StaticResourceMetadataFromJSON(json['metadata']),
        'spec': FlavorSpecFromJSON(json['spec']),
    };
}

export function FlavorToJSON(value?: Flavor | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'metadata': StaticResourceMetadataToJSON(value.metadata),
        'spec': FlavorSpecToJSON(value.spec),
    };
}

