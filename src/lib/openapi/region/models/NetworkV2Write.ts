/* tslint:disable */
/* eslint-disable */
/**
 * Region Service API
 * Cloud region discovery and routing service.  This is service not intended for direct access by end users.  Region related functionality is typically exposed by higher level services e.g. Compute and Kubernetes, that provide subsets of resources that are compatible with that service.
 *
 * The version of the OpenAPI document: 1.9.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { NetworkV2Spec } from './NetworkV2Spec';
import {
    NetworkV2SpecFromJSON,
    NetworkV2SpecFromJSONTyped,
    NetworkV2SpecToJSON,
} from './NetworkV2Spec';
import type { ResourceWriteMetadata } from './ResourceWriteMetadata';
import {
    ResourceWriteMetadataFromJSON,
    ResourceWriteMetadataFromJSONTyped,
    ResourceWriteMetadataToJSON,
} from './ResourceWriteMetadata';

/**
 * A network request.
 * @export
 * @interface NetworkV2Write
 */
export interface NetworkV2Write {
    /**
     * 
     * @type {ResourceWriteMetadata}
     * @memberof NetworkV2Write
     */
    metadata: ResourceWriteMetadata;
    /**
     * 
     * @type {NetworkV2Spec}
     * @memberof NetworkV2Write
     */
    spec: NetworkV2Spec;
}

/**
 * Check if a given object implements the NetworkV2Write interface.
 */
export function instanceOfNetworkV2Write(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "metadata" in value;
    isInstance = isInstance && "spec" in value;

    return isInstance;
}

export function NetworkV2WriteFromJSON(json: any): NetworkV2Write {
    return NetworkV2WriteFromJSONTyped(json, false);
}

export function NetworkV2WriteFromJSONTyped(json: any, ignoreDiscriminator: boolean): NetworkV2Write {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'metadata': ResourceWriteMetadataFromJSON(json['metadata']),
        'spec': NetworkV2SpecFromJSON(json['spec']),
    };
}

export function NetworkV2WriteToJSON(value?: NetworkV2Write | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'metadata': ResourceWriteMetadataToJSON(value.metadata),
        'spec': NetworkV2SpecToJSON(value.spec),
    };
}

