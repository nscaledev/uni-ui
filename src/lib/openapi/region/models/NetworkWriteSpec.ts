/* tslint:disable */
/* eslint-disable */
/**
 * Region Service API
 * Cloud region discovery and routing service.  This is service not intended for direct access by end users.  Region related functionality is typically exposed by higher level services e.g. Compute and Kubernetes, that provide subsets of resources that are compatible with that service.
 *
 * The version of the OpenAPI document: 1.8.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * A physical network's specification.
 * @export
 * @interface NetworkWriteSpec
 */
export interface NetworkWriteSpec {
    /**
     * An IPv4 prefix for the network.
     * @type {string}
     * @memberof NetworkWriteSpec
     */
    prefix: string;
    /**
     * A list of IPv4 addresses.
     * @type {Array<string>}
     * @memberof NetworkWriteSpec
     */
    dnsNameservers: Array<string>;
}

/**
 * Check if a given object implements the NetworkWriteSpec interface.
 */
export function instanceOfNetworkWriteSpec(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "prefix" in value;
    isInstance = isInstance && "dnsNameservers" in value;

    return isInstance;
}

export function NetworkWriteSpecFromJSON(json: any): NetworkWriteSpec {
    return NetworkWriteSpecFromJSONTyped(json, false);
}

export function NetworkWriteSpecFromJSONTyped(json: any, ignoreDiscriminator: boolean): NetworkWriteSpec {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'prefix': json['prefix'],
        'dnsNameservers': json['dnsNameservers'],
    };
}

export function NetworkWriteSpecToJSON(value?: NetworkWriteSpec | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'prefix': value.prefix,
        'dnsNameservers': value.dnsNameservers,
    };
}

