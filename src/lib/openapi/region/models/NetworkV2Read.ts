/* tslint:disable */
/* eslint-disable */
/**
 * Region Service API
 * Cloud region discovery and routing service.  This is service not intended for direct access by end users.  Region related functionality is typically exposed by higher level services e.g. Compute and Kubernetes, that provide subsets of resources that are compatible with that service.
 *
 * The version of the OpenAPI document: 1.9.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { NetworkV2Spec } from './NetworkV2Spec';
import {
    NetworkV2SpecFromJSON,
    NetworkV2SpecFromJSONTyped,
    NetworkV2SpecToJSON,
} from './NetworkV2Spec';
import type { ProjectScopedResourceReadMetadata } from './ProjectScopedResourceReadMetadata';
import {
    ProjectScopedResourceReadMetadataFromJSON,
    ProjectScopedResourceReadMetadataFromJSONTyped,
    ProjectScopedResourceReadMetadataToJSON,
} from './ProjectScopedResourceReadMetadata';

/**
 * A network.
 * @export
 * @interface NetworkV2Read
 */
export interface NetworkV2Read {
    /**
     * 
     * @type {ProjectScopedResourceReadMetadata}
     * @memberof NetworkV2Read
     */
    metadata: ProjectScopedResourceReadMetadata;
    /**
     * 
     * @type {NetworkV2Spec}
     * @memberof NetworkV2Read
     */
    spec: NetworkV2Spec;
}

/**
 * Check if a given object implements the NetworkV2Read interface.
 */
export function instanceOfNetworkV2Read(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "metadata" in value;
    isInstance = isInstance && "spec" in value;

    return isInstance;
}

export function NetworkV2ReadFromJSON(json: any): NetworkV2Read {
    return NetworkV2ReadFromJSONTyped(json, false);
}

export function NetworkV2ReadFromJSONTyped(json: any, ignoreDiscriminator: boolean): NetworkV2Read {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'metadata': ProjectScopedResourceReadMetadataFromJSON(json['metadata']),
        'spec': NetworkV2SpecFromJSON(json['spec']),
    };
}

export function NetworkV2ReadToJSON(value?: NetworkV2Read | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'metadata': ProjectScopedResourceReadMetadataToJSON(value.metadata),
        'spec': NetworkV2SpecToJSON(value.spec),
    };
}

