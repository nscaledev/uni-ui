/* tslint:disable */
/* eslint-disable */
/**
 * Region Service API
 * Cloud region discovery and routing service.  This is service not intended for direct access by end users.  Region related functionality is typically exposed by higher level services e.g. Compute and Kubernetes, that provide subsets of resources that are compatible with that service.
 *
 * The version of the OpenAPI document: 1.9.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ResourceWriteMetadata } from './ResourceWriteMetadata';
import {
    ResourceWriteMetadataFromJSON,
    ResourceWriteMetadataFromJSONTyped,
    ResourceWriteMetadataToJSON,
} from './ResourceWriteMetadata';
import type { ServerSpec } from './ServerSpec';
import {
    ServerSpecFromJSON,
    ServerSpecFromJSONTyped,
    ServerSpecToJSON,
} from './ServerSpec';

/**
 * A server request.
 * @export
 * @interface ServerWrite
 */
export interface ServerWrite {
    /**
     * 
     * @type {ResourceWriteMetadata}
     * @memberof ServerWrite
     */
    metadata: ResourceWriteMetadata;
    /**
     * 
     * @type {ServerSpec}
     * @memberof ServerWrite
     */
    spec: ServerSpec;
}

/**
 * Check if a given object implements the ServerWrite interface.
 */
export function instanceOfServerWrite(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "metadata" in value;
    isInstance = isInstance && "spec" in value;

    return isInstance;
}

export function ServerWriteFromJSON(json: any): ServerWrite {
    return ServerWriteFromJSONTyped(json, false);
}

export function ServerWriteFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServerWrite {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'metadata': ResourceWriteMetadataFromJSON(json['metadata']),
        'spec': ServerSpecFromJSON(json['spec']),
    };
}

export function ServerWriteToJSON(value?: ServerWrite | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'metadata': ResourceWriteMetadataToJSON(value.metadata),
        'spec': ServerSpecToJSON(value.spec),
    };
}

