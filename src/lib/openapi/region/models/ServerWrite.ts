/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes Region Service API
 * Cloud region discovery and routing service.
 *
 * The version of the OpenAPI document: 0.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ResourceWriteMetadata } from './ResourceWriteMetadata';
import {
    ResourceWriteMetadataFromJSON,
    ResourceWriteMetadataFromJSONTyped,
    ResourceWriteMetadataToJSON,
} from './ResourceWriteMetadata';
import type { ServerWriteSpec } from './ServerWriteSpec';
import {
    ServerWriteSpecFromJSON,
    ServerWriteSpecFromJSONTyped,
    ServerWriteSpecToJSON,
} from './ServerWriteSpec';

/**
 * A server request.
 * @export
 * @interface ServerWrite
 */
export interface ServerWrite {
    /**
     * 
     * @type {ResourceWriteMetadata}
     * @memberof ServerWrite
     */
    metadata: ResourceWriteMetadata;
    /**
     * 
     * @type {ServerWriteSpec}
     * @memberof ServerWrite
     */
    spec: ServerWriteSpec;
}

/**
 * Check if a given object implements the ServerWrite interface.
 */
export function instanceOfServerWrite(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "metadata" in value;
    isInstance = isInstance && "spec" in value;

    return isInstance;
}

export function ServerWriteFromJSON(json: any): ServerWrite {
    return ServerWriteFromJSONTyped(json, false);
}

export function ServerWriteFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServerWrite {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'metadata': ResourceWriteMetadataFromJSON(json['metadata']),
        'spec': ServerWriteSpecFromJSON(json['spec']),
    };
}

export function ServerWriteToJSON(value?: ServerWrite | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'metadata': ResourceWriteMetadataToJSON(value.metadata),
        'spec': ServerWriteSpecToJSON(value.spec),
    };
}

