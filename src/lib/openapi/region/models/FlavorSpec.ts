/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes Region Service API
 * Cloud region discovery and routing service.
 *
 * The version of the OpenAPI document: 0.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GpuSpec } from './GpuSpec';
import {
    GpuSpecFromJSON,
    GpuSpecFromJSONTyped,
    GpuSpecToJSON,
} from './GpuSpec';

/**
 * A flavor.
 * @export
 * @interface FlavorSpec
 */
export interface FlavorSpec {
    /**
     * The number of CPUs.
     * @type {number}
     * @memberof FlavorSpec
     */
    cpus: number;
    /**
     * The amount of memory in GiB.
     * @type {number}
     * @memberof FlavorSpec
     */
    memory: number;
    /**
     * The amount of ephemeral disk in GB.
     * @type {number}
     * @memberof FlavorSpec
     */
    disk: number;
    /**
     * 
     * @type {GpuSpec}
     * @memberof FlavorSpec
     */
    gpu?: GpuSpec;
}

/**
 * Check if a given object implements the FlavorSpec interface.
 */
export function instanceOfFlavorSpec(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "cpus" in value;
    isInstance = isInstance && "memory" in value;
    isInstance = isInstance && "disk" in value;

    return isInstance;
}

export function FlavorSpecFromJSON(json: any): FlavorSpec {
    return FlavorSpecFromJSONTyped(json, false);
}

export function FlavorSpecFromJSONTyped(json: any, ignoreDiscriminator: boolean): FlavorSpec {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'cpus': json['cpus'],
        'memory': json['memory'],
        'disk': json['disk'],
        'gpu': !exists(json, 'gpu') ? undefined : GpuSpecFromJSON(json['gpu']),
    };
}

export function FlavorSpecToJSON(value?: FlavorSpec | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'cpus': value.cpus,
        'memory': value.memory,
        'disk': value.disk,
        'gpu': GpuSpecToJSON(value.gpu),
    };
}

