/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes Region Service API
 * Cloud region discovery and routing service.
 *
 * The version of the OpenAPI document: 0.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ServerImageSelector } from './ServerImageSelector';
import {
    ServerImageSelectorFromJSON,
    ServerImageSelectorFromJSONTyped,
    ServerImageSelectorToJSON,
} from './ServerImageSelector';

/**
 * The image to use for the server.
 * @export
 * @interface ServerImage
 */
export interface ServerImage {
    /**
     * The image ID.
     * @type {string}
     * @memberof ServerImage
     */
    id?: string;
    /**
     * 
     * @type {ServerImageSelector}
     * @memberof ServerImage
     */
    selector?: ServerImageSelector;
}

/**
 * Check if a given object implements the ServerImage interface.
 */
export function instanceOfServerImage(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ServerImageFromJSON(json: any): ServerImage {
    return ServerImageFromJSONTyped(json, false);
}

export function ServerImageFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServerImage {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'selector': !exists(json, 'selector') ? undefined : ServerImageSelectorFromJSON(json['selector']),
    };
}

export function ServerImageToJSON(value?: ServerImage | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'selector': ServerImageSelectorToJSON(value.selector),
    };
}

