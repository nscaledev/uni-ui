/* tslint:disable */
/* eslint-disable */
/**
 * Region Service API
 * Cloud region discovery and routing service.  This is service not intended for direct access by end users.  Region related functionality is typically exposed by higher level services e.g. Compute and Kubernetes, that provide subsets of resources that are compatible with that service.
 *
 * The version of the OpenAPI document: 1.5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { IdentitySpec } from './IdentitySpec';
import {
    IdentitySpecFromJSON,
    IdentitySpecFromJSONTyped,
    IdentitySpecToJSON,
} from './IdentitySpec';
import type { ProjectScopedResourceReadMetadata } from './ProjectScopedResourceReadMetadata';
import {
    ProjectScopedResourceReadMetadataFromJSON,
    ProjectScopedResourceReadMetadataFromJSONTyped,
    ProjectScopedResourceReadMetadataToJSON,
} from './ProjectScopedResourceReadMetadata';

/**
 * A provider specific identity.
 * @export
 * @interface IdentityRead
 */
export interface IdentityRead {
    /**
     * 
     * @type {ProjectScopedResourceReadMetadata}
     * @memberof IdentityRead
     */
    metadata: ProjectScopedResourceReadMetadata;
    /**
     * 
     * @type {IdentitySpec}
     * @memberof IdentityRead
     */
    spec: IdentitySpec;
}

/**
 * Check if a given object implements the IdentityRead interface.
 */
export function instanceOfIdentityRead(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "metadata" in value;
    isInstance = isInstance && "spec" in value;

    return isInstance;
}

export function IdentityReadFromJSON(json: any): IdentityRead {
    return IdentityReadFromJSONTyped(json, false);
}

export function IdentityReadFromJSONTyped(json: any, ignoreDiscriminator: boolean): IdentityRead {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'metadata': ProjectScopedResourceReadMetadataFromJSON(json['metadata']),
        'spec': IdentitySpecFromJSON(json['spec']),
    };
}

export function IdentityReadToJSON(value?: IdentityRead | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'metadata': ProjectScopedResourceReadMetadataToJSON(value.metadata),
        'spec': IdentitySpecToJSON(value.spec),
    };
}

