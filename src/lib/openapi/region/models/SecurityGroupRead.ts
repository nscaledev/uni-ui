/* tslint:disable */
/* eslint-disable */
/**
 * Region Service API
 * Cloud region discovery and routing service.  This is service not intended for direct access by end users.  Region related functionality is typically exposed by higher level services e.g. Compute and Kubernetes, that provide subsets of resources that are compatible with that service.
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProjectScopedResourceReadMetadata } from './ProjectScopedResourceReadMetadata';
import {
    ProjectScopedResourceReadMetadataFromJSON,
    ProjectScopedResourceReadMetadataFromJSONTyped,
    ProjectScopedResourceReadMetadataToJSON,
} from './ProjectScopedResourceReadMetadata';
import type { SecurityGroupReadSpec } from './SecurityGroupReadSpec';
import {
    SecurityGroupReadSpecFromJSON,
    SecurityGroupReadSpecFromJSONTyped,
    SecurityGroupReadSpecToJSON,
} from './SecurityGroupReadSpec';

/**
 * A security group.
 * @export
 * @interface SecurityGroupRead
 */
export interface SecurityGroupRead {
    /**
     * 
     * @type {ProjectScopedResourceReadMetadata}
     * @memberof SecurityGroupRead
     */
    metadata: ProjectScopedResourceReadMetadata;
    /**
     * 
     * @type {SecurityGroupReadSpec}
     * @memberof SecurityGroupRead
     */
    spec: SecurityGroupReadSpec;
}

/**
 * Check if a given object implements the SecurityGroupRead interface.
 */
export function instanceOfSecurityGroupRead(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "metadata" in value;
    isInstance = isInstance && "spec" in value;

    return isInstance;
}

export function SecurityGroupReadFromJSON(json: any): SecurityGroupRead {
    return SecurityGroupReadFromJSONTyped(json, false);
}

export function SecurityGroupReadFromJSONTyped(json: any, ignoreDiscriminator: boolean): SecurityGroupRead {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'metadata': ProjectScopedResourceReadMetadataFromJSON(json['metadata']),
        'spec': SecurityGroupReadSpecFromJSON(json['spec']),
    };
}

export function SecurityGroupReadToJSON(value?: SecurityGroupRead | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'metadata': ProjectScopedResourceReadMetadataToJSON(value.metadata),
        'spec': SecurityGroupReadSpecToJSON(value.spec),
    };
}

