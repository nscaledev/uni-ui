/* tslint:disable */
/* eslint-disable */
/**
 * Region Service API
 * Cloud region discovery and routing service.  This is service not intended for direct access by end users.  Region related functionality is typically exposed by higher level services e.g. Compute and Kubernetes, that provide subsets of resources that are compatible with that service.
 *
 * The version of the OpenAPI document: 1.9.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SecurityGroupRule } from './SecurityGroupRule';
import {
    SecurityGroupRuleFromJSON,
    SecurityGroupRuleFromJSONTyped,
    SecurityGroupRuleToJSON,
} from './SecurityGroupRule';

/**
 * A security group's specification.
 * @export
 * @interface SecurityGroupSpec
 */
export interface SecurityGroupSpec {
    /**
     * A set of security group rules to apply.
     * @type {Array<SecurityGroupRule>}
     * @memberof SecurityGroupSpec
     */
    rules: Array<SecurityGroupRule>;
}

/**
 * Check if a given object implements the SecurityGroupSpec interface.
 */
export function instanceOfSecurityGroupSpec(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "rules" in value;

    return isInstance;
}

export function SecurityGroupSpecFromJSON(json: any): SecurityGroupSpec {
    return SecurityGroupSpecFromJSONTyped(json, false);
}

export function SecurityGroupSpecFromJSONTyped(json: any, ignoreDiscriminator: boolean): SecurityGroupSpec {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'rules': ((json['rules'] as Array<any>).map(SecurityGroupRuleFromJSON)),
    };
}

export function SecurityGroupSpecToJSON(value?: SecurityGroupSpec | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'rules': ((value.rules as Array<any>).map(SecurityGroupRuleToJSON)),
    };
}

