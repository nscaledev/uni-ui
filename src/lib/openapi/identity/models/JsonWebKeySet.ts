/* tslint:disable */
/* eslint-disable */
/**
 * Unikorn Identity API
 * The Unikorn Identity API provides an OIDC compliant interface for use with all Unikorn services and proxies.  As it\'s intended use is for multi-tenant cloud deployments it acts as an aggregation layer for other 3rd party OIDC services, dispatching login requests to the required OIDC backend.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * JSON web key set. This data type is defined by an external 3rd party standards
 * committee. Consult the relevant documentation for further details.
 * @export
 * @interface JsonWebKeySet
 */
export interface JsonWebKeySet {
    /**
     * 
     * @type {Array<Array<object>>}
     * @memberof JsonWebKeySet
     */
    keys?: Array<Array<object>>;
}

/**
 * Check if a given object implements the JsonWebKeySet interface.
 */
export function instanceOfJsonWebKeySet(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function JsonWebKeySetFromJSON(json: any): JsonWebKeySet {
    return JsonWebKeySetFromJSONTyped(json, false);
}

export function JsonWebKeySetFromJSONTyped(json: any, ignoreDiscriminator: boolean): JsonWebKeySet {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'keys': !exists(json, 'keys') ? undefined : json['keys'],
    };
}

export function JsonWebKeySetToJSON(value?: JsonWebKeySet | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'keys': value.keys,
    };
}

