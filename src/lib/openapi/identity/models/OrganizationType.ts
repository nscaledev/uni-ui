/* tslint:disable */
/* eslint-disable */
/**
 * Identity API
 * The Identity API provides an OIDC compliant interface for use with all official and 3rd party services and proxies.  As its intended use is for multi-tenant cloud deployments, it acts as an aggregation layer for other 3rd party OIDC services, dispatching login requests to the required OIDC backend.  Token introspection forms the basis of role based access control across all APIs.  For security purposes, access tokens and refresh tokens are limited to a single session per client, thus if they are being consumed by a horizontally scalable platform care must be taken to ensure token rotation is handled atomically by a single process, and the tokens are distributed to each service instance synchronously.
 *
 * The version of the OpenAPI document: 1.9.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * Describes the authentication method of the organization.  Ad hoc authentication
 * means that users are exclusively added via explicit group membership  And must
 * use a 'sign-in via' option.  Domain authentication means that users may login
 * via their email address, must in the case of custom identity providers, that
 * maps from domain to an identity provider.
 * @export
 */
export const OrganizationType = {
    Adhoc: 'adhoc',
    Domain: 'domain'
} as const;
export type OrganizationType = typeof OrganizationType[keyof typeof OrganizationType];


export function OrganizationTypeFromJSON(json: any): OrganizationType {
    return OrganizationTypeFromJSONTyped(json, false);
}

export function OrganizationTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrganizationType {
    return json as OrganizationType;
}

export function OrganizationTypeToJSON(value?: OrganizationType | null): any {
    return value as any;
}

