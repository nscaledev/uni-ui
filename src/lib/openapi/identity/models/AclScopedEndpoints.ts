/* tslint:disable */
/* eslint-disable */
/**
 * Unikorn Identity API
 * The Unikorn Identity API provides an OIDC compliant interface for use with all Unikorn services and proxies.  As it\'s intended use is for multi-tenant cloud deployments it acts as an aggregation layer for other 3rd party OIDC services, dispatching login requests to the required OIDC backend.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AclEndpoint } from './AclEndpoint';
import {
    AclEndpointFromJSON,
    AclEndpointFromJSONTyped,
    AclEndpointToJSON,
} from './AclEndpoint';

/**
 * Resource scoped endpoint permissions.
 * @export
 * @interface AclScopedEndpoints
 */
export interface AclScopedEndpoints {
    /**
     * The resource ID this scope applies to.
     * @type {string}
     * @memberof AclScopedEndpoints
     */
    id: string;
    /**
     * A list of access control scopes.
     * @type {Array<AclEndpoint>}
     * @memberof AclScopedEndpoints
     */
    endpoints: Array<AclEndpoint>;
}

/**
 * Check if a given object implements the AclScopedEndpoints interface.
 */
export function instanceOfAclScopedEndpoints(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "endpoints" in value;

    return isInstance;
}

export function AclScopedEndpointsFromJSON(json: any): AclScopedEndpoints {
    return AclScopedEndpointsFromJSONTyped(json, false);
}

export function AclScopedEndpointsFromJSONTyped(json: any, ignoreDiscriminator: boolean): AclScopedEndpoints {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'endpoints': ((json['endpoints'] as Array<any>).map(AclEndpointFromJSON)),
    };
}

export function AclScopedEndpointsToJSON(value?: AclScopedEndpoints | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'endpoints': ((value.endpoints as Array<any>).map(AclEndpointToJSON)),
    };
}

