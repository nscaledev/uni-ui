/* tslint:disable */
/* eslint-disable */
/**
 * Unikorn Identity API
 * The Unikorn Identity API provides an OIDC compliant interface for use with all Unikorn services and proxies.  As it\'s intended use is for multi-tenant cloud deployments it acts as an aggregation layer for other 3rd party OIDC services, dispatching login requests to the required OIDC backend.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * An IdP group
 * @export
 * @interface AvailableGroup
 */
export interface AvailableGroup {
    /**
     * The canonical group name.
     * @type {string}
     * @memberof AvailableGroup
     */
    name: string;
    /**
     * A human readable group name.
     * @type {string}
     * @memberof AvailableGroup
     */
    displayName?: string;
}

/**
 * Check if a given object implements the AvailableGroup interface.
 */
export function instanceOfAvailableGroup(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function AvailableGroupFromJSON(json: any): AvailableGroup {
    return AvailableGroupFromJSONTyped(json, false);
}

export function AvailableGroupFromJSONTyped(json: any, ignoreDiscriminator: boolean): AvailableGroup {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'displayName': !exists(json, 'displayName') ? undefined : json['displayName'],
    };
}

export function AvailableGroupToJSON(value?: AvailableGroup | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'displayName': value.displayName,
    };
}

