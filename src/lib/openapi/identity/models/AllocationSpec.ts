/* tslint:disable */
/* eslint-disable */
/**
 * Unikorn Identity API
 * The Unikorn Identity API provides an OIDC compliant interface for use with all Unikorn services and proxies.  As it\'s intended use is for multi-tenant cloud deployments it acts as an aggregation layer for other 3rd party OIDC services, dispatching login requests to the required OIDC backend.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { QuotaDetailed } from './QuotaDetailed';
import {
    QuotaDetailedFromJSON,
    QuotaDetailedFromJSONTyped,
    QuotaDetailedToJSON,
} from './QuotaDetailed';

/**
 * A set of resource allocations.
 * @export
 * @interface AllocationSpec
 */
export interface AllocationSpec {
    /**
     * The resource kind that owns this allocation.
     * @type {string}
     * @memberof AllocationSpec
     */
    kind: string;
    /**
     * The resource ID that owns this allocation.
     * @type {string}
     * @memberof AllocationSpec
     */
    id: string;
    /**
     * A list of quotas.
     * @type {Array<QuotaDetailed>}
     * @memberof AllocationSpec
     */
    allocations: Array<QuotaDetailed>;
}

/**
 * Check if a given object implements the AllocationSpec interface.
 */
export function instanceOfAllocationSpec(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "kind" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "allocations" in value;

    return isInstance;
}

export function AllocationSpecFromJSON(json: any): AllocationSpec {
    return AllocationSpecFromJSONTyped(json, false);
}

export function AllocationSpecFromJSONTyped(json: any, ignoreDiscriminator: boolean): AllocationSpec {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'kind': json['kind'],
        'id': json['id'],
        'allocations': ((json['allocations'] as Array<any>).map(QuotaDetailedFromJSON)),
    };
}

export function AllocationSpecToJSON(value?: AllocationSpec | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'kind': value.kind,
        'id': value.id,
        'allocations': ((value.allocations as Array<any>).map(QuotaDetailedToJSON)),
    };
}

