/* tslint:disable */
/* eslint-disable */
/**
 * Unikorn Identity API
 * The Unikorn Identity API provides an OIDC compliant interface for use with all Unikorn services and proxies.  As it\'s intended use is for multi-tenant cloud deployments it acts as an aggregation layer for other 3rd party OIDC services, dispatching login requests to the required OIDC backend.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Access token introspection data.
 * @export
 * @interface Userinfo
 */
export interface Userinfo {
    /**
     * The token issuer.
     * @type {string}
     * @memberof Userinfo
     */
    iss?: string;
    /**
     * The access token's subject.
     * @type {string}
     * @memberof Userinfo
     */
    sub: string;
    /**
     * The intended token audience.
     * @type {string}
     * @memberof Userinfo
     */
    aud?: string;
    /**
     * The token expiry time.
     * @type {number}
     * @memberof Userinfo
     */
    exp?: number;
    /**
     * The token start time.
     * @type {number}
     * @memberof Userinfo
     */
    nbf?: number;
    /**
     * When the token was issued.
     * @type {number}
     * @memberof Userinfo
     */
    iat?: number;
    /**
     * The token ID.
     * @type {string}
     * @memberof Userinfo
     */
    jti?: string;
}

/**
 * Check if a given object implements the Userinfo interface.
 */
export function instanceOfUserinfo(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "sub" in value;

    return isInstance;
}

export function UserinfoFromJSON(json: any): Userinfo {
    return UserinfoFromJSONTyped(json, false);
}

export function UserinfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): Userinfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'iss': !exists(json, 'iss') ? undefined : json['iss'],
        'sub': json['sub'],
        'aud': !exists(json, 'aud') ? undefined : json['aud'],
        'exp': !exists(json, 'exp') ? undefined : json['exp'],
        'nbf': !exists(json, 'nbf') ? undefined : json['nbf'],
        'iat': !exists(json, 'iat') ? undefined : json['iat'],
        'jti': !exists(json, 'jti') ? undefined : json['jti'],
    };
}

export function UserinfoToJSON(value?: Userinfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'iss': value.iss,
        'sub': value.sub,
        'aud': value.aud,
        'exp': value.exp,
        'nbf': value.nbf,
        'iat': value.iat,
        'jti': value.jti,
    };
}

