/* tslint:disable */
/* eslint-disable */
/**
 * Unikorn Identity API
 * The Unikorn Identity API provides an OIDC compliant interface for use with all Unikorn services and proxies.  As it\'s intended use is for multi-tenant cloud deployments it acts as an aggregation layer for other 3rd party OIDC services, dispatching login requests to the required OIDC backend.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Quota } from './Quota';
import {
    QuotaFromJSON,
    QuotaFromJSONTyped,
    QuotaToJSON,
} from './Quota';
import type { QuotaDetailed } from './QuotaDetailed';
import {
    QuotaDetailedFromJSON,
    QuotaDetailedFromJSONTyped,
    QuotaDetailedToJSON,
} from './QuotaDetailed';

/**
 * A list of quotas, free resources and a detailed view of allocated ones.
 * @export
 * @interface QuotasRead
 */
export interface QuotasRead {
    /**
     * A list of quotas.
     * @type {Array<Quota>}
     * @memberof QuotasRead
     */
    capacity: Array<Quota>;
    /**
     * A list of quotas.
     * @type {Array<Quota>}
     * @memberof QuotasRead
     */
    free: Array<Quota>;
    /**
     * A list of quotas.
     * @type {Array<QuotaDetailed>}
     * @memberof QuotasRead
     */
    allocated: Array<QuotaDetailed>;
}

/**
 * Check if a given object implements the QuotasRead interface.
 */
export function instanceOfQuotasRead(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "capacity" in value;
    isInstance = isInstance && "free" in value;
    isInstance = isInstance && "allocated" in value;

    return isInstance;
}

export function QuotasReadFromJSON(json: any): QuotasRead {
    return QuotasReadFromJSONTyped(json, false);
}

export function QuotasReadFromJSONTyped(json: any, ignoreDiscriminator: boolean): QuotasRead {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'capacity': ((json['capacity'] as Array<any>).map(QuotaFromJSON)),
        'free': ((json['free'] as Array<any>).map(QuotaFromJSON)),
        'allocated': ((json['allocated'] as Array<any>).map(QuotaDetailedFromJSON)),
    };
}

export function QuotasReadToJSON(value?: QuotasRead | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'capacity': ((value.capacity as Array<any>).map(QuotaToJSON)),
        'free': ((value.free as Array<any>).map(QuotaToJSON)),
        'allocated': ((value.allocated as Array<any>).map(QuotaDetailedToJSON)),
    };
}

