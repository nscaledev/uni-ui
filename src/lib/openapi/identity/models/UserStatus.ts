/* tslint:disable */
/* eslint-disable */
/**
 * Unikorn Identity API
 * The Unikorn Identity API provides an OIDC compliant interface for use with all Unikorn services and proxies.  As it\'s intended use is for multi-tenant cloud deployments it acts as an aggregation layer for other 3rd party OIDC services, dispatching login requests to the required OIDC backend.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Additional user metadata.
 * @export
 * @interface UserStatus
 */
export interface UserStatus {
    /**
     * The last time a user performed some action.  This is not guaranteed to
     * be completely accurate depending on performance constraints.
     * @type {Date}
     * @memberof UserStatus
     */
    lastActive?: Date;
}

/**
 * Check if a given object implements the UserStatus interface.
 */
export function instanceOfUserStatus(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UserStatusFromJSON(json: any): UserStatus {
    return UserStatusFromJSONTyped(json, false);
}

export function UserStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserStatus {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'lastActive': !exists(json, 'lastActive') ? undefined : (new Date(json['lastActive'])),
    };
}

export function UserStatusToJSON(value?: UserStatus | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'lastActive': value.lastActive === undefined ? undefined : (value.lastActive.toISOString()),
    };
}

