/* tslint:disable */
/* eslint-disable */
/**
 * Application Service API
 * The application service is a layer that sits on top of the Kubernetes service and allows the provisioning of applications onto managed Kubernetes clusters. This yields a higher level PaaS solution.
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ApplicationRead,
  ModelError,
} from '../models/index';
import {
    ApplicationReadFromJSON,
    ApplicationReadToJSON,
    ModelErrorFromJSON,
    ModelErrorToJSON,
} from '../models/index';

export interface ApiV1OrganizationsOrganizationIDProjectsProjectIDApplicationsGetRequest {
    organizationID: string;
    projectID: string;
}

/**
 * 
 */
export class DefaultApi extends runtime.BaseAPI {

    /**
     * Lists applications available to be installed on clusters.
     */
    async apiV1OrganizationsOrganizationIDProjectsProjectIDApplicationsGetRaw(requestParameters: ApiV1OrganizationsOrganizationIDProjectsProjectIDApplicationsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ApplicationRead>>> {
        if (requestParameters.organizationID === null || requestParameters.organizationID === undefined) {
            throw new runtime.RequiredError('organizationID','Required parameter requestParameters.organizationID was null or undefined when calling apiV1OrganizationsOrganizationIDProjectsProjectIDApplicationsGet.');
        }

        if (requestParameters.projectID === null || requestParameters.projectID === undefined) {
            throw new runtime.RequiredError('projectID','Required parameter requestParameters.projectID was null or undefined when calling apiV1OrganizationsOrganizationIDProjectsProjectIDApplicationsGet.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2Authentication", []);
        }

        const response = await this.request({
            path: `/api/v1/organizations/{organizationID}/projects/{projectID}/applications`.replace(`{${"organizationID"}}`, encodeURIComponent(String(requestParameters.organizationID))).replace(`{${"projectID"}}`, encodeURIComponent(String(requestParameters.projectID))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ApplicationReadFromJSON));
    }

    /**
     * Lists applications available to be installed on clusters.
     */
    async apiV1OrganizationsOrganizationIDProjectsProjectIDApplicationsGet(requestParameters: ApiV1OrganizationsOrganizationIDProjectsProjectIDApplicationsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ApplicationRead>> {
        const response = await this.apiV1OrganizationsOrganizationIDProjectsProjectIDApplicationsGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
