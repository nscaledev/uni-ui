/* tslint:disable */
/* eslint-disable */
/**
 * Compute Service API
 * The Compute Service API provides services that allows provisioning and life cycle management of Compute clusters. Requests must specify the HTML content type header.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ComputeClusterMachineStatus } from './ComputeClusterMachineStatus';
import {
    ComputeClusterMachineStatusFromJSON,
    ComputeClusterMachineStatusFromJSONTyped,
    ComputeClusterMachineStatusToJSON,
} from './ComputeClusterMachineStatus';

/**
 * Compute cluster workload pool status.
 * @export
 * @interface ComputeClusterWorkloadPoolStatus
 */
export interface ComputeClusterWorkloadPoolStatus {
    /**
     * Workload pool name.
     * @type {string}
     * @memberof ComputeClusterWorkloadPoolStatus
     */
    name: string;
    /**
     * Number of machines.
     * @type {number}
     * @memberof ComputeClusterWorkloadPoolStatus
     */
    replicas: number;
    /**
     * A list of Compute cluster machines status.
     * @type {Array<ComputeClusterMachineStatus>}
     * @memberof ComputeClusterWorkloadPoolStatus
     */
    machines?: Array<ComputeClusterMachineStatus>;
}

/**
 * Check if a given object implements the ComputeClusterWorkloadPoolStatus interface.
 */
export function instanceOfComputeClusterWorkloadPoolStatus(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "replicas" in value;

    return isInstance;
}

export function ComputeClusterWorkloadPoolStatusFromJSON(json: any): ComputeClusterWorkloadPoolStatus {
    return ComputeClusterWorkloadPoolStatusFromJSONTyped(json, false);
}

export function ComputeClusterWorkloadPoolStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): ComputeClusterWorkloadPoolStatus {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'replicas': json['replicas'],
        'machines': !exists(json, 'machines') ? undefined : ((json['machines'] as Array<any>).map(ComputeClusterMachineStatusFromJSON)),
    };
}

export function ComputeClusterWorkloadPoolStatusToJSON(value?: ComputeClusterWorkloadPoolStatus | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'replicas': value.replicas,
        'machines': value.machines === undefined ? undefined : ((value.machines as Array<any>).map(ComputeClusterMachineStatusToJSON)),
    };
}

