/* tslint:disable */
/* eslint-disable */
/**
 * Compute Service API
 * The Compute Service API provides services that allows provisioning and life cycle management of Compute clusters.
 *
 * The version of the OpenAPI document: 1.8.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { MachinePool } from './MachinePool';
import {
    MachinePoolFromJSON,
    MachinePoolFromJSONTyped,
    MachinePoolToJSON,
} from './MachinePool';

/**
 * A Compute cluster workload pool.
 * @export
 * @interface ComputeClusterWorkloadPool
 */
export interface ComputeClusterWorkloadPool {
    /**
     * A valid Kubernetes label value, typically used for resource names that can be
     * indexed in the database.
     * @type {string}
     * @memberof ComputeClusterWorkloadPool
     */
    name: string;
    /**
     * 
     * @type {MachinePool}
     * @memberof ComputeClusterWorkloadPool
     */
    machine: MachinePool;
}

/**
 * Check if a given object implements the ComputeClusterWorkloadPool interface.
 */
export function instanceOfComputeClusterWorkloadPool(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "machine" in value;

    return isInstance;
}

export function ComputeClusterWorkloadPoolFromJSON(json: any): ComputeClusterWorkloadPool {
    return ComputeClusterWorkloadPoolFromJSONTyped(json, false);
}

export function ComputeClusterWorkloadPoolFromJSONTyped(json: any, ignoreDiscriminator: boolean): ComputeClusterWorkloadPool {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'machine': MachinePoolFromJSON(json['machine']),
    };
}

export function ComputeClusterWorkloadPoolToJSON(value?: ComputeClusterWorkloadPool | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'machine': MachinePoolToJSON(value.machine),
    };
}

