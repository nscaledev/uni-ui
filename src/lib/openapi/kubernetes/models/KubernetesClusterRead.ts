/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes Service API
 * The Kubernetes Service API provides services that allows provisioning and life cycle management of Kubernetes clusters.
 *
 * The version of the OpenAPI document: 1.6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { KubernetesClusterSpec } from './KubernetesClusterSpec';
import {
    KubernetesClusterSpecFromJSON,
    KubernetesClusterSpecFromJSONTyped,
    KubernetesClusterSpecToJSON,
} from './KubernetesClusterSpec';
import type { ProjectScopedResourceReadMetadata } from './ProjectScopedResourceReadMetadata';
import {
    ProjectScopedResourceReadMetadataFromJSON,
    ProjectScopedResourceReadMetadataFromJSONTyped,
    ProjectScopedResourceReadMetadataToJSON,
} from './ProjectScopedResourceReadMetadata';

/**
 * Kubernetes cluster read.
 * @export
 * @interface KubernetesClusterRead
 */
export interface KubernetesClusterRead {
    /**
     * 
     * @type {ProjectScopedResourceReadMetadata}
     * @memberof KubernetesClusterRead
     */
    metadata: ProjectScopedResourceReadMetadata;
    /**
     * 
     * @type {KubernetesClusterSpec}
     * @memberof KubernetesClusterRead
     */
    spec: KubernetesClusterSpec;
}

/**
 * Check if a given object implements the KubernetesClusterRead interface.
 */
export function instanceOfKubernetesClusterRead(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "metadata" in value;
    isInstance = isInstance && "spec" in value;

    return isInstance;
}

export function KubernetesClusterReadFromJSON(json: any): KubernetesClusterRead {
    return KubernetesClusterReadFromJSONTyped(json, false);
}

export function KubernetesClusterReadFromJSONTyped(json: any, ignoreDiscriminator: boolean): KubernetesClusterRead {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'metadata': ProjectScopedResourceReadMetadataFromJSON(json['metadata']),
        'spec': KubernetesClusterSpecFromJSON(json['spec']),
    };
}

export function KubernetesClusterReadToJSON(value?: KubernetesClusterRead | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'metadata': ProjectScopedResourceReadMetadataToJSON(value.metadata),
        'spec': KubernetesClusterSpecToJSON(value.spec),
    };
}

