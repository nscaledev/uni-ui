/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes Service API
 * The Kubernetes Service API provides services that allows provisioning and life cycle management of Kubernetes clusters. The API is logically composed of authentication services, platform provider specific calls to get a set of resource types that can be then used by abstract Kubernetes Service resources to create and manage Kubernetes clusters. Requests must specify the HTML content type header.
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * A kubernetes cluster network settings.
 * @export
 * @interface KubernetesClusterNetwork
 */
export interface KubernetesClusterNetwork {
    /**
     * Network prefix to provision nodes in. Must be a valid CIDR block.
     * @type {string}
     * @memberof KubernetesClusterNetwork
     */
    nodePrefix?: string;
    /**
     * Network prefix to provision services in. Must be a valid CIDR block.
     * @type {string}
     * @memberof KubernetesClusterNetwork
     */
    servicePrefix?: string;
    /**
     * Network prefix to provision pods in. Must be a valid CIDR block.
     * @type {string}
     * @memberof KubernetesClusterNetwork
     */
    podPrefix?: string;
    /**
     * A list of DNS name server to use.
     * @type {Array<string>}
     * @memberof KubernetesClusterNetwork
     */
    dnsNameservers?: Array<string>;
}

/**
 * Check if a given object implements the KubernetesClusterNetwork interface.
 */
export function instanceOfKubernetesClusterNetwork(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function KubernetesClusterNetworkFromJSON(json: any): KubernetesClusterNetwork {
    return KubernetesClusterNetworkFromJSONTyped(json, false);
}

export function KubernetesClusterNetworkFromJSONTyped(json: any, ignoreDiscriminator: boolean): KubernetesClusterNetwork {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'nodePrefix': !exists(json, 'nodePrefix') ? undefined : json['nodePrefix'],
        'servicePrefix': !exists(json, 'servicePrefix') ? undefined : json['servicePrefix'],
        'podPrefix': !exists(json, 'podPrefix') ? undefined : json['podPrefix'],
        'dnsNameservers': !exists(json, 'dnsNameservers') ? undefined : json['dnsNameservers'],
    };
}

export function KubernetesClusterNetworkToJSON(value?: KubernetesClusterNetwork | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'nodePrefix': value.nodePrefix,
        'servicePrefix': value.servicePrefix,
        'podPrefix': value.podPrefix,
        'dnsNameservers': value.dnsNameservers,
    };
}

