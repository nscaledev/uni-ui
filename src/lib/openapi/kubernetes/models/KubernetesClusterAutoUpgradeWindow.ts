/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes Service API
 * The Kubernetes Service API provides services that allows provisioning and life cycle management of Kubernetes clusters.
 *
 * The version of the OpenAPI document: 1.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Defines when in the day an upgrade is allowed to occur, specified as an
 * hour starting from 0 up to 23.  Upgrade windows can overflow into the next
 * day e.g. a start of 22 will begin upgrades from 10pm, and an end of 6 will
 * stop upgrades after 6am.
 * @export
 * @interface KubernetesClusterAutoUpgradeWindow
 */
export interface KubernetesClusterAutoUpgradeWindow {
    /**
     * Hour to start upgrades.
     * @type {number}
     * @memberof KubernetesClusterAutoUpgradeWindow
     */
    start: number;
    /**
     * Hour to end upgrades.
     * @type {number}
     * @memberof KubernetesClusterAutoUpgradeWindow
     */
    end: number;
}

/**
 * Check if a given object implements the KubernetesClusterAutoUpgradeWindow interface.
 */
export function instanceOfKubernetesClusterAutoUpgradeWindow(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "start" in value;
    isInstance = isInstance && "end" in value;

    return isInstance;
}

export function KubernetesClusterAutoUpgradeWindowFromJSON(json: any): KubernetesClusterAutoUpgradeWindow {
    return KubernetesClusterAutoUpgradeWindowFromJSONTyped(json, false);
}

export function KubernetesClusterAutoUpgradeWindowFromJSONTyped(json: any, ignoreDiscriminator: boolean): KubernetesClusterAutoUpgradeWindow {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'start': json['start'],
        'end': json['end'],
    };
}

export function KubernetesClusterAutoUpgradeWindowToJSON(value?: KubernetesClusterAutoUpgradeWindow | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'start': value.start,
        'end': value.end,
    };
}

