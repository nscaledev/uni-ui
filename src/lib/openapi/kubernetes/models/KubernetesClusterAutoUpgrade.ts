/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes Service API
 * The Kubernetes Service API provides services that allows provisioning and life cycle management of Kubernetes clusters. The API is logically composed of authentication services, platform provider specific calls to get a set of resource types that can be then used by abstract Kubernetes Service resources to create and manage Kubernetes clusters. Requests must specify the HTML content type header.
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { KubernetesClusterAutoUpgradeDaysOfWeek } from './KubernetesClusterAutoUpgradeDaysOfWeek';
import {
    KubernetesClusterAutoUpgradeDaysOfWeekFromJSON,
    KubernetesClusterAutoUpgradeDaysOfWeekFromJSONTyped,
    KubernetesClusterAutoUpgradeDaysOfWeekToJSON,
} from './KubernetesClusterAutoUpgradeDaysOfWeek';

/**
 * If set enables auto-upgrade to a set schedule, or opt out of upgrades
 * entirely.  Upgrades still occur when the cluster's application bundle
 * reaches end of life irrespective of whether auto upgrades are disabled.
 * The absence of this object represents a default auto-upgrade policy of
 * the platform.
 * @export
 * @interface KubernetesClusterAutoUpgrade
 */
export interface KubernetesClusterAutoUpgrade {
    /**
     * Whether or not auto upgrades are enabled.
     * @type {boolean}
     * @memberof KubernetesClusterAutoUpgrade
     */
    enabled: boolean;
    /**
     * 
     * @type {KubernetesClusterAutoUpgradeDaysOfWeek}
     * @memberof KubernetesClusterAutoUpgrade
     */
    daysOfWeek?: KubernetesClusterAutoUpgradeDaysOfWeek;
}

/**
 * Check if a given object implements the KubernetesClusterAutoUpgrade interface.
 */
export function instanceOfKubernetesClusterAutoUpgrade(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "enabled" in value;

    return isInstance;
}

export function KubernetesClusterAutoUpgradeFromJSON(json: any): KubernetesClusterAutoUpgrade {
    return KubernetesClusterAutoUpgradeFromJSONTyped(json, false);
}

export function KubernetesClusterAutoUpgradeFromJSONTyped(json: any, ignoreDiscriminator: boolean): KubernetesClusterAutoUpgrade {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'enabled': json['enabled'],
        'daysOfWeek': !exists(json, 'daysOfWeek') ? undefined : KubernetesClusterAutoUpgradeDaysOfWeekFromJSON(json['daysOfWeek']),
    };
}

export function KubernetesClusterAutoUpgradeToJSON(value?: KubernetesClusterAutoUpgrade | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'enabled': value.enabled,
        'daysOfWeek': KubernetesClusterAutoUpgradeDaysOfWeekToJSON(value.daysOfWeek),
    };
}

